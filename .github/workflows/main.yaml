name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  integration: 
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"  

  build-and-push-gar-image:
    name: Continuous Delivery
    needs: integration  # Fixed typo
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Verify Authentication
        run: gcloud auth list --filter=status:ACTIVE --format="value(account)"

      - name: Configure Docker for Google Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/avian-altar-417409/my-repo/my-image:latest .

      - name: Push Docker Image to Google Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/avian-altar-417409/my-repo/my-image:latest

  continuous-deployment:
    needs: build-and-push-gar-image
    runs-on: self-hosted
    steps:      
      - name: Configure GCP credentials
        uses: google-github-actions/auth@v2
        with: 
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Login to GCP Compute engine
        id: login-ce
        uses: google-github-actions/ssh-compute@v1
        with:
          instance_name: ${{ secrets.GCP_INSTANCE_NAME }}
          zone: ${{ secrets.GCP_ZONE }}
          ssh_private_key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          user: ${{ secrets.GCP_SSH_USER }}
          command: "hostname"   
      - name: Authenticate Docker for Google Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev
      - name: Pull docker image
        run: |
          docker pull us-central1-docker.pkg.dev/avian-altar-417409/my-repo/my-image:latest

      - name: Stop and remove existing container (if running)
        run: |
          docker ps -q --filter "name=networksecurity" | grep -q . && docker stop networksecurity && docker rm networksecurity || echo "No existing container to remove"

      - name: Run docker images
        env:
          GCP_ACCESS_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          docker run -d -p 8080:8080 --ipc="host" --name=networksecurity \
          -e GCP_ACCESS_KEY="$GCP_ACCESS_KEY" \
          us-central1-docker.pkg.dev/avian-altar-417409/my-repo/my-image:latest
      
      - name: Clean previous images and containers
        run: |
          docker image prune -af
          docker system prune -f


          